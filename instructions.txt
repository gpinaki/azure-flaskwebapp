Create a Resource Group in Azure.

Create an SQL Database in Azure that contains a user table, an article table, and 
data in each table (populated with the scripts provided in the SQL Scripts folder).

Provide a screenshot of the populated tables as detailed further below.

Create a Storage Container in Azure for images to be stored in a container.

Provide a screenshot of the storage endpoint URL as detailed further below.

Add functionality to the Sign In With Microsoft button.


This will require completing TODOs in views.py with the msal library, along with 
appropriate registration in Azure Active Directory.

Choose to use either a VM or App Service to deploy the FlaskWebProject to Azure. Complete the analysis template in WRITEUP.md (or include in the README) to compare the two options, as well as detail your reasoning behind choosing one or the other. Once you have made your choice, go through with deployment.
Add logging for whether users successfully or unsuccessfully logged in.
This will require completing TODOs in __init__.py, as well as adding logging where desired in views.py.
alembic==1.4.0
azure-common==1.1.24
azure-nspkg==3.0.2
azure-storage==0.36.0
cachelib==0.1.1
certifi==2019.11.28
cffi==1.14.0
chardet==3.0.4
Click==7.0
cryptography==2.8
Flask==0.12.5
Flask-Login==0.5.0
Flask-Session==0.3.2
Flask-SQLAlchemy==2.4.1
Flask-WTF==0.14.3
idna==2.8
itsdangerous==1.1.0
Jinja2==2.11.1
Mako==1.1.1
MarkupSafe==1.1.1
msal==1.3.0
pycparser==2.19
PyJWT==1.7.1
pyodbc==4.0.28
pyOpenSSL==19.1.0
python-dateutil==2.8.1
python-editor==1.0.4
requests==2.22.0
six==1.14.0
SQLAlchemy==1.3.13
urllib3==1.25.8
Werkzeug==0.16.1
WTForms==2.2.1
